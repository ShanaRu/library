{"remainingRequest":"D:\\IBM课件和代码\\work\\library\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\IBM课件和代码\\work\\library\\src\\components\\Login.vue?vue&type=style&index=0&id=ef68022e&scoped=true&lang=css&","dependencies":[{"path":"D:\\IBM课件和代码\\work\\library\\src\\components\\Login.vue","mtime":1606378963041},{"path":"D:\\IBM课件和代码\\work\\library\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IBM课件和代码\\work\\library\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\IBM课件和代码\\work\\library\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\IBM课件和代码\\work\\library\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\IBM课件和代码\\work\\library\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoubG9naW5fY29udGFpbmVyIHsNCiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi9hc3NldHMvaW1hZ2VzL2xvZ2luLnBuZyIpOw0KICBiYWNrZ3JvdW5kLXNpemU6IDEwMCUgMTAwJTsNCiAgaGVpZ2h0OiAxMDAlOw0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQp9DQoNCi5sb2dpbl9ib3ggew0KICB3aWR0aDogNTAwcHg7DQogIGhlaWdodDogMzAwcHg7DQogIGJvcmRlci1yYWRpdXM6IDNweDsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICBsZWZ0OiAzMCU7DQogIHRvcDogNjAlOw0KICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsNCn0NCg0KLmxvZ2luX2Zvcm0gew0KICBwb3NpdGlvbjogYWJzb2x1dGU7DQogIGJvdHRvbTogMDsNCiAgaGVpZ2h0OjUxMHB4Ow0KICB3aWR0aDogMTAwJTsNCiAgcGFkZGluZzogMCAyMHB4Ow0KICBib3gtc2l6aW5nOiBib3JkZXItYm94Ow0KICAvKmJhY2tncm91bmQtY29sb3I6cmdiKDIxMiwgMjEwLCAyMzUpOw0KICBiYWNrZ3JvdW5kLWNvbG9yOnJnYigyMjcsIDIyNiwgMjQxKTsqLw0KICBiYWNrZ3JvdW5kLWNvbG9yOnJnYigyMzAsIDIyOCwgMjQ1KTsNCiAgYm9yZGVyLXJhZGl1czogMTVweDsNCiAgcGFkZGluZzowIDQwcHg7DQp9DQoNCi5idG5zIHsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQp9DQouc3lzdGVtTmFtZSB7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIGxlZnQ6NjUlOw0KICAgIHRvcDo4JTsNCiAgICBjb2xvcjogcmdiKDExNywgMTEwLCAyMTkpOw0KICAgIGZvbnQtc2l6ZTogMjhweDsNCn0NCg0KLmxvZ2luVGl0bGUgew0KICAgIGNvbG9yOiByZ2IoMTE3LCAxMTAsIDIxOSk7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KLmxpbmtUZXh0IHsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogICAgbWFyZ2luOiAyNXB4IDA7DQp9DQoubGlua1RleHQgYSB7DQogICAgY29sb3I6IHJnYigxMTcsIDExMCwgMjE5KTsNCiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7DQogICAgZm9udC1zaXplOiAxNnB4Ow0KfQ0KLmxpbmtUZXh0IGE6aG92ZXIgew0KICAgIGNvbG9yOiAgcmdiKDE3MiwgMTY4LCAyMzEpOw0KfQ0KDQouZnJvbnQgew0KICB0cmFuc2Zvcm06IHJvdGF0ZVkoMGRlZyk7DQp9DQovKiDlsIZiYWNr5peL6L2sMTgw5bqm77yM6IOM6Z2i5pyd5ZCR55So5oi377yM6L+Z6L656YCJeei9tOeahCAqLw0KLmJhY2sgew0KICB0cmFuc2Zvcm06IHJvdGF0ZVkoLTE4MGRlZyk7DQp9DQoNCi5mcm9udCwNCi5iYWNrIHsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICAvKiDnhLblkI7orr7nva7kuLrog4zpnaLmnJ3lkJHnlKjmiLfml7bkuI3lj6/op4EgKi8NCiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOw0KICAvKiDnlKhsaW5lYXLpobrmu5HkuIDngrkgKi8NCiAgdHJhbnNpdGlvbjogMC4zcyBsaW5lYXI7DQp9DQoNCi8qIOWwhmZyb2505peL6L2sMTgw5bqmICovDQoubWlkZGxlLWZsaXAgLmZyb250IHsNCiAgdHJhbnNmb3JtOiBwZXJzcGVjdGl2ZSg2MDBweCkgcm90YXRlWSgxODBkZWcpIDsNCn0NCi8qIOWwhmJhY2vml4vovawxODDluqYgKi8NCi5taWRkbGUtZmxpcCAuYmFjayB7DQogIHRyYW5zZm9ybTogcGVyc3BlY3RpdmUoNjAwcHgpIHJvdGF0ZVkoMGRlZykgOw0KfQ0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappingsfile":"Login.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"login_container\">\r\n        <div class=\"login_box\">\r\n            <el-form label-width=\"80px\" label-position=\"left\" class=\"login_form front\" :model=\"loginForm\" :rules=\"rules\" ref=\"loginFormRef\">\r\n                <div><h1 class=\"loginTitle\" style=\"margin-top:15%\">登录</h1></div>\r\n                <el-form-item prop=\"loginUsername\" label=\"用户名\" style=\"margin-top:13%\">\r\n                    <el-input v-model=\"loginForm.loginUsername\" type=\"text\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"loginPassword\" label=\"密码\" style=\"margin-top:8%\">\r\n                    <el-input v-model=\"loginForm.loginPassword\" type=\"password\"></el-input>\r\n                </el-form-item>\r\n                <p class=\"btns\" style=\"margin-top:8%\">\r\n                    <el-button type=\"primary\" @click=\"login\" style=\"margin-right:40px\">登录</el-button>\r\n                    <el-button @click=\"resetLoginForm\">重置</el-button>\r\n                </p>\r\n                <p class=\"linkText\" style=\"margin-top:13%\"><a @click=\"registerBox\" href=\"javascript:;\">没有账号，去注册</a></p>\r\n            </el-form>\r\n             <el-form label-width=\"80px\" label-position=\"left\" class=\"login_form back\" :model=\"registerForm\" :rules=\"rules\" ref=\"registerFormRef\">\r\n                <div><h1 class=\"loginTitle\">注册</h1></div>\r\n                <el-form-item prop=\"username\" label=\"用户名\">\r\n                    <el-input v-model=\"registerForm.username\" type=\"text\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"nickname\" label=\"姓名\">\r\n                    <el-input v-model=\"registerForm.nickname\" type=\"text\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"email\" label=\"邮箱\">\r\n                    <el-input v-model=\"registerForm.email\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"password\" label=\"输入密码\">\r\n                    <el-input v-model=\"registerForm.password\" type=\"password\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item prop=\"confirmPassword\" label=\"确认密码\">\r\n                    <el-input v-model=\"registerForm.confirmPassword\" type=\"password\"></el-input>\r\n                </el-form-item>\r\n                <p class=\"btns\">\r\n                    <el-button type=\"primary\" @click=\"register\" style=\"margin-right:40px\">注册</el-button>\r\n                    <el-button @click=\"resetRegisterForm\">重置</el-button>\r\n                </p>\r\n                <p class=\"linkText\"><a @click=\"loginBox\" href=\"javascript:;\">已有账号，去登录</a></p>\r\n            </el-form>\r\n        </div>\r\n        <div class=\"systemName\">\r\n            <h1>图书馆管理系统</h1>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport qs from 'qs'\r\nimport $ from 'jquery'\r\nexport default {\r\n    name: \"register\",\r\n    data() {\r\n        var validateName = (rule, value, callback) => {\r\n            if(!/^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{3,30}$/.test(value)) {\r\n                callback('必须同时包含数字和字母');\r\n            }\r\n            callback();\r\n        };\r\n        var validatePassword = (rule, value, callback) => {\r\n            // if(!/^(?=.*\\d)(?=.*[a-zA-Z])(?=.*[~!@#$%^&*])[\\da-zA-Z~!@#$%^&*]{8,30}$/.test(value)) {\r\n            //     callback('必须同时包含数字、字母和特殊字符');\r\n            // }\r\n            // callback();\r\n            let regx1 = /[`~!@#$%^&*()_\\-+=<>?:\"{}|,.\\/;'\\\\[\\]·~！@#￥%……&*（）——\\-+={}|《》？：“”【】、；‘'，。、]+/;\r\n            let regx2 = /[0-9]+/;\r\n            let regx3 = /[a-zA-Z]/;\r\n            if(!regx1.test(value)){\r\n                callback(\"密码缺少特殊字符\");\r\n            }\r\n            if(!regx2.test(value)){\r\n                callback(\"密码缺少数字\");\r\n            }\r\n            if(!regx3.test(value)){\r\n                callback(\"密码缺少字母\");\r\n            }\r\n            callback();\r\n        };\r\n        var validatorEmail = (rule, value, callback) => {\r\n            const mailReg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/\r\n            setTimeout(() => {\r\n                if (mailReg.test(value)) {\r\n                    callback()\r\n                } else {\r\n                    callback(new Error('请输入正确的邮箱格式'))\r\n                }\r\n            }, 100)\r\n        }\r\n        var validateConfirmPassword = (rule, value, callback) => {\r\n            let regx1 = /[`~!@#$%^&*()_\\-+=<>?:\"{}|,.\\/;'\\\\[\\]·~！@#￥%……&*（）——\\-+={}|《》？：“”【】、；‘'，。、]+/;\r\n            let regx2 = /[0-9]+/;\r\n            let regx3 = /[a-zA-Z]/;\r\n            if(!regx1.test(value)){\r\n                callback(\"密码缺少特殊字符\");\r\n            }\r\n            if(!regx2.test(value)){\r\n                callback(\"密码缺少数字\");\r\n            }\r\n            if(!regx3.test(value)){\r\n                callback(\"密码缺少字母\");\r\n            }\r\n            if (this.registerForm.password != value) {\r\n                callback('两次输入密码不一致');\r\n            }\r\n            callback();\r\n        };\r\n        return {\r\n            loginForm: {\r\n                loginUsername: '',\r\n                loginPassword: ''\r\n            },\r\n            registerForm: {\r\n                username:'',\r\n                nickname:'',\r\n                password:'',\r\n                confirmPassword:'',\r\n                email:''\r\n            },\r\n            rules: {\r\n                loginUsername: [\r\n                    { required: true, message: '请输入登录名称', trigger: 'blur' }\r\n                ],\r\n                loginPassword: [\r\n                    { required: true, message: '请输入密码', trigger: 'blur' }\r\n                ],\r\n                username: [\r\n                    { required: true, message: '请输入登录名称', trigger: 'blur' },\r\n                    { min: 3, max: 30, message: '登录名称的长度在 3 到 30 位之间', trigger: 'blur' },\r\n                    { validator: validateName, trigger: 'blur' }\r\n                ],\r\n                password: [\r\n                    { required: true, message: '请输入密码', trigger: 'blur' },\r\n                    { min: 8, max: 30, message: '密码的长度在 8 到 30 位之间', trigger: 'blur' },\r\n                    { validator: validatePassword, trigger: 'blur' }\r\n                ],\r\n                email: [\r\n                    { required: true, message: '请输入邮箱地址', trigger: 'blur' },\r\n                    { min: 1, max: 30, message: '邮箱地址的长度不大于 30 位', trigger: 'blur' },\r\n                    {validator: validatorEmail, trigger: 'blur'}\r\n                ],\r\n                nickname: [\r\n                    { required: true, message: '请输入姓名', trigger: 'blur' },\r\n                    { min: 2, max: 20, message: '姓名的长度在 2 到 20 位之间', trigger: 'blur' }\r\n                ],\r\n                confirmPassword: [\r\n                    { required: true, message: '请再次输入密码', trigger: 'blur' },\r\n                    { min: 8, max: 30, message: '密码的长度在 8 到 30 位之间', trigger: 'blur' },\r\n                    { validator: validateConfirmPassword, trigger: 'blur' }\r\n                ]\r\n            },\r\n        }\r\n    },\r\n    methods: {\r\n        resetLoginForm () {\r\n            this.$refs.loginFormRef.resetFields();\r\n        },\r\n        resetRegisterForm() {\r\n            this.$refs.registerFormRef.resetFields();\r\n        },\r\n        login () {\r\n            this.$refs['loginFormRef'].validate((valid) => {\r\n            if (valid) {\r\n                axios({\r\n                    method:'post',\r\n                    url:\"/user/login\",\r\n                    data:qs.parse({\r\n                        username:this.loginForm.loginUsername,\r\n                        password:this.loginForm.loginPassword\r\n                    })\r\n                })\r\n                .then(response => {\r\n                    let result = response.data;\r\n                    if(result.code == 200) {\r\n                        this.$message({\r\n                            showClose: true,\r\n                            message: '登录成功',\r\n                            type: 'success'\r\n                        });\r\n                        //将用户信息保存到sessionStorage\r\n                        sessionStorage.setItem(\"userId\",result.data.user.id);\r\n                        sessionStorage.setItem(\"userName\",result.data.user.username);\r\n                        sessionStorage.setItem('token',result.data.token);\r\n                        let role = result.data.user.roles[0].roleName;\r\n                        sessionStorage.setItem('role',role);\r\n                        //跳转用户主页页面\r\n                        if(role == 'user') {\r\n                            this.$router.push('/userHomePage');\r\n                        }else {\r\n                            this.$router.push('/adminHomePage');\r\n                        }\r\n                        \r\n                    }else if(result.code == 104) {\r\n                        this.$message({\r\n                            showClose: true,\r\n                            message: result.msg,//用户名不存在\r\n                            type: 'error'\r\n                        });\r\n                    }else if(result.code == 101) {\r\n                        this.$message({\r\n                            showClose: true,\r\n                            message: result.msg,//密码错误\r\n                            type: 'error'\r\n                        });\r\n                    }\r\n                    else if(result.code == 103) {\r\n                        this.$message({\r\n                            showClose: true,\r\n                            message: result.msg,//用户已注销\r\n                            type: 'error'\r\n                        });\r\n                    }\r\n                    else {\r\n                        this.$message({\r\n                            showClose: true,\r\n                            message: '登录失败',\r\n                            type: 'error'\r\n                        });\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    this.$message({\r\n                        showClose: true,\r\n                        message: '系统错误',\r\n                        type: 'error'\r\n                    });\r\n                })\r\n            } else {\r\n                console.log('登录失败');\r\n                return false;\r\n            }\r\n            });\r\n        },\r\n        register () {\r\n            this.$refs['registerFormRef'].validate((valid) => {\r\n                if(valid) {\r\n                    axios({\r\n                        method:'post',\r\n                        url:'/user/register',\r\n                        data:qs.parse({\r\n                            userName:this.registerForm.username,\r\n                            nickname:this.registerForm.nickname,\r\n                            email:this.registerForm.email,\r\n                            password:this.registerForm.password,\r\n                            twicePassword:this.registerForm.confirmPassword\r\n                        })\r\n                    })\r\n                    .then(response => {\r\n                        if(response.data.code == 200) {\r\n                            this.$message({\r\n                                message: '请前往邮箱激活账号,在5秒后回到登录页面',\r\n                                type: 'success',\r\n                                showClose: true\r\n                            });\r\n                            //5秒后回到登录框\r\n                            this.timer = setTimeout(()=>{\r\n                                this.$refs.registerFormRef.resetFields();\r\n                                $(\".login_box\").toggleClass(\"middle-flip\");\r\n                            },5000);\r\n                        }else if(response.data.code == 109) {\r\n                            this.$message({\r\n                                message: response.data.msg,//用户名已存在\r\n                                type: 'error',\r\n                                showClose: true\r\n                            });\r\n                        }else {\r\n                            this.$message({\r\n                                message: '注册失败',\r\n                                type: 'error',\r\n                                showClose: true\r\n                            });\r\n                        }\r\n                    })\r\n                    .catch(error=>{\r\n                        this.$message({\r\n                            type:'error',\r\n                            message:'系统错误',\r\n                            showClose:true\r\n                        })\r\n                    })\r\n                }else {\r\n                    console.log('注册失败');\r\n                    return false;\r\n                }\r\n            })\r\n        },\r\n        //控制登录框和注册框翻转\r\n        registerBox() {\r\n            $(\".login_box\").toggleClass(\"middle-flip\");\r\n        },\r\n        loginBox() {\r\n            $(\".login_box\").toggleClass(\"middle-flip\");\r\n        }\r\n    },\r\n    created() {\r\n        //渲染登录页面成功前清除sessionStorage\r\n        sessionStorage.clear();\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.login_container {\r\n  background-image: url(\"../assets/images/login.png\");\r\n  background-size: 100% 100%;\r\n  height: 100%;\r\n  position: relative;\r\n}\r\n\r\n.login_box {\r\n  width: 500px;\r\n  height: 300px;\r\n  border-radius: 3px;\r\n  position: absolute;\r\n  left: 30%;\r\n  top: 60%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n\r\n.login_form {\r\n  position: absolute;\r\n  bottom: 0;\r\n  height:510px;\r\n  width: 100%;\r\n  padding: 0 20px;\r\n  box-sizing: border-box;\r\n  /*background-color:rgb(212, 210, 235);\r\n  background-color:rgb(227, 226, 241);*/\r\n  background-color:rgb(230, 228, 245);\r\n  border-radius: 15px;\r\n  padding:0 40px;\r\n}\r\n\r\n.btns {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.systemName {\r\n    position: absolute;\r\n    left:65%;\r\n    top:8%;\r\n    color: rgb(117, 110, 219);\r\n    font-size: 28px;\r\n}\r\n\r\n.loginTitle {\r\n    color: rgb(117, 110, 219);\r\n    text-align: center;\r\n}\r\n.linkText {\r\n    text-align: center;\r\n    margin: 25px 0;\r\n}\r\n.linkText a {\r\n    color: rgb(117, 110, 219);\r\n    text-decoration: none;\r\n    font-size: 16px;\r\n}\r\n.linkText a:hover {\r\n    color:  rgb(172, 168, 231);\r\n}\r\n\r\n.front {\r\n  transform: rotateY(0deg);\r\n}\r\n/* 将back旋转180度，背面朝向用户，这边选y轴的 */\r\n.back {\r\n  transform: rotateY(-180deg);\r\n}\r\n\r\n.front,\r\n.back {\r\n  position: absolute;\r\n  /* 然后设置为背面朝向用户时不可见 */\r\n  backface-visibility: hidden;\r\n  /* 用linear顺滑一点 */\r\n  transition: 0.3s linear;\r\n}\r\n\r\n/* 将front旋转180度 */\r\n.middle-flip .front {\r\n  transform: perspective(600px) rotateY(180deg) ;\r\n}\r\n/* 将back旋转180度 */\r\n.middle-flip .back {\r\n  transform: perspective(600px) rotateY(0deg) ;\r\n}\r\n</style>"]}]}